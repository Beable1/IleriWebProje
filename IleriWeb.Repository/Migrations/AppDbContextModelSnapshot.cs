// <auto-generated />
using System;
using IleriWeb.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IleriWeb.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IleriWeb.Core.DTOs.dailyordersummary", b =>
                {
                    b.Property<DateTime>("orderdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("totalorders")
                        .HasColumnType("integer");

                    b.Property<decimal>("totalrevenue")
                        .HasColumnType("numeric");

                    b.ToTable((string)null);

                    b.ToView("dailyordersummary", (string)null);
                });

            modelBuilder.Entity("IleriWeb.Core.DTOs.mostactivecustomers", b =>
                {
                    b.Property<int>("customerid")
                        .HasColumnType("integer");

                    b.Property<string>("customername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("totalorders")
                        .HasColumnType("integer");

                    b.Property<decimal>("totalspent")
                        .HasColumnType("numeric");

                    b.ToTable((string)null);

                    b.ToView("mostactivecustomers", (string)null);
                });

            modelBuilder.Entity("IleriWeb.Core.DTOs.mostorderedproduct", b =>
                {
                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("productname");

                    b.Property<int>("totalquantity")
                        .HasColumnType("integer")
                        .HasColumnName("totalquantity");

                    b.ToTable((string)null);

                    b.ToView("mostorderedproducts", (string)null);
                });

            modelBuilder.Entity("IleriWeb.Core.DTOs.mostsoldcategories", b =>
                {
                    b.Property<string>("categoryname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("totalsold")
                        .HasColumnType("integer");

                    b.ToTable((string)null);

                    b.ToView("mostsoldcategories", (string)null);
                });

            modelBuilder.Entity("IleriWeb.Core.DTOs.productstockstatus", b =>
                {
                    b.Property<int>("productid")
                        .HasColumnType("integer");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("stockstatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("unitsinstock")
                        .HasColumnType("integer");

                    b.ToTable((string)null);

                    b.ToView("productstockstatus", (string)null);
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("IleriWeb.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Order", b =>
                {
                    b.HasOne("IleriWeb.Core.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.OrderDetail", b =>
                {
                    b.HasOne("IleriWeb.Core.Models.Order", "Order")
                        .WithOne("OrderDetails")
                        .HasForeignKey("IleriWeb.Core.Models.OrderDetail", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IleriWeb.Core.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.ProductFeature", b =>
                {
                    b.HasOne("IleriWeb.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("IleriWeb.Core.Models.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IleriWeb.Core.Product", b =>
                {
                    b.HasOne("IleriWeb.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("IleriWeb.Core.Models.Order", b =>
                {
                    b.Navigation("OrderDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("IleriWeb.Core.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
